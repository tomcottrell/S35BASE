/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menulayer3_screen/MenuLayer3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MenuLayer3ViewBase::MenuLayer3ViewBase()
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image2.setXY(0, -1);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_320X240_POLY_ID));
    add(image2);

    Ribbon.setPosition(0, 1, 320, 23);
    Ribbon.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(Ribbon);

    menuItemBackground.setPosition(16, 40, 293, 29);
    menuItemBackground.setColor(touchgfx::Color::getColorFromRGB(40, 105, 184));
    menuItemBackground.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    menuItemBackground.setBorderSize(2);
    add(menuItemBackground);

    menuItemBackground_1.setPosition(16, 80, 293, 113);
    menuItemBackground_1.setColor(touchgfx::Color::getColorFromRGB(180, 195, 214));
    menuItemBackground_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    menuItemBackground_1.setBorderSize(2);
    add(menuItemBackground_1);

    button1.setXY(80, 216);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button1);

    button0.setXY(0, 216);
    button0.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button0);

    button3.setXY(240, 216);
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button3);

    button2.setXY(160, 216);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button2);

    Enter_1.setXY(265, 213);
    Enter_1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_SUBDIRECTORY_ARROW_RIGHT_30_30_000000_SVG_ID));
    add(Enter_1);

    Menu.setXY(25, 213);
    Menu.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_MENU_30_30_000000_SVG_ID));
    add(Menu);

    Up_1.setXY(105, 213);
    Up_1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_30_30_000000_SVG_ID));
    add(Up_1);

    Down_1.setXY(185, 213);
    Down_1.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_30_30_000000_SVG_ID));
    add(Down_1);

    enumValueText.setPosition(37, 41, 246, 29);
    enumValueText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    enumValueText.setLinespacing(0);
    Unicode::snprintf(enumValueTextBuffer, ENUMVALUETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K4NX).getText());
    enumValueText.setWildcard(enumValueTextBuffer);
    enumValueText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8246));
    enumValueText.setVisible(false);
    add(enumValueText);

    numberValueText.setPosition(71, 40, 98, 29);
    numberValueText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    numberValueText.setLinespacing(0);
    Unicode::snprintf(numberValueTextBuffer, NUMBERVALUETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AR9V).getText());
    numberValueText.setWildcard(numberValueTextBuffer);
    numberValueText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AHFH));
    add(numberValueText);

    minValueText.setPosition(19, 41, 97, 29);
    minValueText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    minValueText.setLinespacing(0);
    Unicode::snprintf(minValueTextBuffer, MINVALUETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CNYR).getText());
    minValueText.setWildcard(minValueTextBuffer);
    minValueText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJGX));
    add(minValueText);

    maxValueText.setPosition(203, 41, 103, 29);
    maxValueText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    maxValueText.setLinespacing(0);
    Unicode::snprintf(maxValueTextBuffer, MAXVALUETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7YGH).getText());
    maxValueText.setWildcard(maxValueTextBuffer);
    maxValueText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3IVH));
    add(maxValueText);

    itemNameText.setPosition(28, -1, 264, 23);
    itemNameText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    itemNameText.setLinespacing(0);
    Unicode::snprintf(itemNameTextBuffer, ITEMNAMETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BMPI).getText());
    itemNameText.setWildcard(itemNameTextBuffer);
    itemNameText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P2M3));
    add(itemNameText);

    descText.setPosition(19, 80, 287, 113);
    descText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    descText.setLinespacing(0);
    Unicode::snprintf(descTextBuffer, DESCTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WSQS).getText());
    descText.setWildcard(descTextBuffer);
    descText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZZBX));
    add(descText);

    unitsText.setPosition(171, 40, 78, 29);
    unitsText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    unitsText.setLinespacing(0);
    unitsText.setWildcard(touchgfx::TypedText(T___SINGLEUSE_AEMJ).getText());
    unitsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9M44));
    add(unitsText);
}

MenuLayer3ViewBase::~MenuLayer3ViewBase()
{

}

void MenuLayer3ViewBase::setupScreen()
{

}

void MenuLayer3ViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //GOHOME
        //When hardware button 0 clicked change screen to MenuLayer2
        //Go to MenuLayer2 with no screen transition
        application().gotoMenuLayer2ScreenNoTransition();
    
    }

    if(1 == key)
    {
        //Up
        //When hardware button 1 clicked call virtual function
        //Call handleUpButton
        handleUpButton();
    
    }

    if(2 == key)
    {
        //Down
        //When hardware button 2 clicked call virtual function
        //Call handleDownButton
        handleDownButton();
    
    }

    if(3 == key)
    {
        //Enter
        //When hardware button 3 clicked call virtual function
        //Call handleEnterButton
        handleEnterButton();
    
    }
}
