/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/diagnostic_screen/DiagnosticViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DiagnosticViewBase::DiagnosticViewBase()
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box6.setPosition(0, 0, 320, 23);
    box6.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box6);

    test.setXY(-1, 0);
    test.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_320X240_POLY_ID));
    add(test);

    boxWithBorder1.setPosition(9, 92, 304, 119);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(232, 232, 232));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(2);
    boxWithBorder1.setAlpha(174);
    add(boxWithBorder1);

    box6_1.setPosition(0, 0, 320, 23);
    box6_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box6_1);

    button1.setXY(80, 216);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button1);

    button0.setXY(0, 216);
    button0.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button0);

    button2.setXY(160, 216);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button2);

    button3.setXY(240, 216);
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button3);

    HEADER.setXY(113, -1);
    HEADER.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    HEADER.setLinespacing(0);
    HEADER.setWildcard(touchgfx::TypedText(T___SINGLEUSE_75H0).getText());
    HEADER.resizeToCurrentText();
    HEADER.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9KPE));
    add(HEADER);

    HEADER_1.setXY(3, 0);
    HEADER_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    HEADER_1.setLinespacing(0);
    HEADER_1.setWildcard(touchgfx::TypedText(T___SINGLEUSE_L7KG).getText());
    HEADER_1.resizeToCurrentText();
    HEADER_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HA1K));
    add(HEADER_1);

    LATCH.setXY(258, 215);
    LATCH.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    LATCH.setLinespacing(0);
    Unicode::snprintf(LATCHBuffer, LATCH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UB6I).getText());
    LATCH.setWildcard(LATCHBuffer);
    LATCH.resizeToCurrentText();
    LATCH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NOVX));
    add(LATCH);

    box7.setPosition(8, 114, 303, 2);
    box7.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box7);

    box7_2.setPosition(107, 94, 2, 117);
    box7_2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box7_2);

    box7_2_2.setPosition(205, 93, 2, 70);
    box7_2_2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box7_2_2);

    Inclo.setXY(12, 160);
    Inclo.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Inclo.setLinespacing(0);
    Inclo.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SDL8));
    add(Inclo);

    param.setXY(12, 90);
    param.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    param.setLinespacing(0);
    param.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IYKH));
    add(param);

    truck.setXY(113, 92);
    truck.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    truck.setLinespacing(0);
    truck.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CTSB));
    add(truck);

    trailer.setXY(210, 92);
    trailer.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    trailer.setLinespacing(0);
    trailer.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J2RQ));
    add(trailer);

    HydPress.setXY(12, 113);
    HydPress.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    HydPress.setLinespacing(0);
    HydPress.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ENWZ));
    add(HydPress);

    box7_1.setPosition(9, 138, 301, 2);
    box7_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box7_1);

    box7_1_1.setPosition(9, 162, 302, 2);
    box7_1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box7_1_1);

    Latch.setXY(13, 137);
    Latch.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Latch.setLinespacing(0);
    Latch.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5YCL));
    add(Latch);

    EStop.setXY(12, 184);
    EStop.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    EStop.setLinespacing(0);
    EStop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DD70));
    add(EStop);

    box7_1_1_1.setPosition(9, 184, 301, 2);
    box7_1_1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box7_1_1_1);

    Inclotxt.setPosition(164, 160, 87, 25);
    Inclotxt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Inclotxt.setLinespacing(0);
    Unicode::snprintf(InclotxtBuffer, INCLOTXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KFHC).getText());
    Inclotxt.setWildcard(InclotxtBuffer);
    Inclotxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1ZF));
    add(Inclotxt);

    HydPresstxt.setPosition(113, 116, 100, 23);
    HydPresstxt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    HydPresstxt.setLinespacing(0);
    Unicode::snprintf(HydPresstxtBuffer, HYDPRESSTXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QUFX).getText());
    HydPresstxt.setWildcard(HydPresstxtBuffer);
    HydPresstxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EGUK));
    add(HydPresstxt);

    Latchtxt.setPosition(113, 138, 92, 23);
    Latchtxt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Latchtxt.setLinespacing(0);
    Unicode::snprintf(LatchtxtBuffer, LATCHTXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RNFU).getText());
    Latchtxt.setWildcard(LatchtxtBuffer);
    Latchtxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_22VR));
    add(Latchtxt);

    Latchtxt_trailer.setPosition(210, 138, 99, 23);
    Latchtxt_trailer.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Latchtxt_trailer.setLinespacing(0);
    Unicode::snprintf(Latchtxt_trailerBuffer, LATCHTXT_TRAILER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QS83).getText());
    Latchtxt_trailer.setWildcard(Latchtxt_trailerBuffer);
    Latchtxt_trailer.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BQWI));
    add(Latchtxt_trailer);

    HydPresstxt_trailer.setPosition(210, 116, 100, 23);
    HydPresstxt_trailer.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    HydPresstxt_trailer.setLinespacing(0);
    Unicode::snprintf(HydPresstxt_trailerBuffer, HYDPRESSTXT_TRAILER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_D8BX).getText());
    HydPresstxt_trailer.setWildcard(HydPresstxt_trailerBuffer);
    HydPresstxt_trailer.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TJ3D));
    add(HydPresstxt_trailer);

    EStoptxt.setPosition(146, 184, 122, 23);
    EStoptxt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    EStoptxt.setLinespacing(0);
    Unicode::snprintf(EStoptxtBuffer, ESTOPTXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KRNC).getText());
    EStoptxt.setWildcard(EStoptxtBuffer);
    EStoptxt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L3ZN));
    add(EStoptxt);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_EAST_50_50_000000_SVG_ID));
    scalableImage2.setPosition(20, 215, 37, 27);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage2);
}

DiagnosticViewBase::~DiagnosticViewBase()
{

}

void DiagnosticViewBase::setupScreen()
{

}

void DiagnosticViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //NEXT_PAGE
        //When hardware button 0 clicked change screen to Diagnostic
        //Go to Diagnostic with no screen transition
        application().gotoDiagnosticScreenNoTransition();
    
    }

    if(3 == key)
    {
        //GOTOMENU
        //When hardware button 3 clicked change screen to PasswordEntry
        //Go to PasswordEntry with no screen transition
        application().gotoPasswordEntryScreenNoTransition();
    
    }
}
